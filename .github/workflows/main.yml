on:
  push:
    tags:
      - "v*"

jobs:
  create_release:
    runs-on: ubuntu-latest
    name: create & deploy new release
    steps:
      - name: checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: get tag
        id: tag_version
        run: |
          echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}

      - name: export game
        id: export
        uses: firebelley/godot-export@v4.2.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.0/beta3/Godot_v4.0-beta3_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.0/beta3/Godot_v4.0-beta3_export_templates.tpz
          relative_project_path: ./
          archive_output: true
          use_godot_4: true

      - name: create release
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          tag_name: ${{ steps.tag_version.outputs.TAG_VERSION }}
          files: ${{ steps.export.outputs.archive_directory }}/*

  create_web_release:
    runs-on: ubuntu-latest
    name: create & deploy new web release
    steps:
      - name: checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: set web export presets
        id: set_preset
        run: |
          cd $GITHUB_WORKSPACE
          mv export_presets.cfg.web export_presets.cfg

      - name: get tag
        id: tag_version
        run: |
          echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/tags/v}

      - name: export game
        id: export
        uses: firebelley/godot-export@v4.2.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.0/beta3/Godot_v4.0-beta3_linux.x86_64.zip
          godot_export_templates_download_url: https://dl.dropboxusercontent.com/s/b8tx66olhc70rti/Godot_4_beta_custom_templates.zip
          relative_project_path: ./
          archive_output: true
          use_godot_4: true

      - name: prepare release & deployment
        run: |
          mkdir -p remote/${{ steps.tag_version.outputs.TAG_VERSION }}
          cp -rT ${{ steps.export.outputs.build_directory }}/web remote/${{ steps.tag_version.outputs.TAG_VERSION }}/
          rm -rf ${{ steps.export.outputs.archive_directory }}/web.zip

      - name: deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: github-pages
          FOLDER: remote
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLEAR_GLOBS_FILE: ".clear-target-files"
